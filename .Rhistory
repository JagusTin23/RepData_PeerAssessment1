plot(cars, col = 2)
plot(cars, xlim=c(10, 15))
plot(cars, pch = 2)
mtcars
data(mtcars)
?boxplot
boxplot(formula = mpg ~ cyl, data = mtcars)
hist(mtcars$mpg)
install_from_swirl("Getting and Cleaning Data")
swirl()
mydf <- read.csv(pat2csv, stringsAsFactors = FALSE)
mydf <- read.csv(path2csv, stringsAsFactors = FALSE)
dim(mydf)
head(mydf)
library(dplyr)
packageVersion("dplyr")
cran <- tbl_df(mydf)
rm("mydf")
cran
?select
select(cran, ip_id, package, country)
5:20
select(cars, r_arch:country)
select(cran, r_arch:country)
select(cran, country:r_arch)
cran
select(cran, -time)
-5:20
-(5:20)
select(cars, -(X:size))
select(cran, -(X:size))
filter(cran, package == "swirl")
filter(cran, r_version == "3.1.1", country == "US")
?Comparison
filter(cran, r_version <= "3.0.2", country == "IN")
filter(cran, country == "US" | country == "IN")
filter(cran, size > 100500 & r_os == "linux_gnu")
filter(cran, size > 100500, r_os == "linux_gnu")
filter(cran, size > 100500, r_os == "linux-gnu")
is.na(c(3,5,NA,10))
!is.na(c(3,5,NA,10))
filter(cran, !is.na(r_version))
cran2 <- select(cran, size:ip_id)
arrange(cran2, ip_id)
arrange(cran2, desc(ip_id))
arrange(cran2, package, ip_id)
arrange(cran2, country, desc(r_version), ip_id)
cran3 <- select(cran, ip_id, package, size)
cran3
mutate(cran3, size_mb = size/2^20)
mutate(cran3, size_mb = size/2^20, size_gb = size/mb/2^10)
mutate(cran3, size_mb = size/2^20, size_gb = size_mb/2^10)
mutate(cran3, correct_size = size-1000)
mutate(cran3, correct_size = size+1000)
summarize(cran, sum_down = sum(downloands))
summarize(cran, avg_bytes = mean(size))
library(dplyr)
cran <- tbl_df(mydf)
rm("mydf")
cran
?group_by
by_package <- group_by(cran, package)
by_package
summarize(by_package, mean(size))
submit()
pack_sum
quantile(pack_sum$count, probs = 0.99)
top_counts <- filter(pack_sum, count > 679)
top_count
top_counts
View(top_counts)
top_counts_sorted <- arrange(top_counts, desc(counts))
top_counts_sorted <- arrange(top_counts, desc(count))
View(top_counts_sorted)
quantile(pack_sum$unique, probs = 0.99)
top_unique <- filter(pack_sum, unique > 465)
View(top_unique)
arrange(top_unique, unique)
arrange(top_unique, desc(unique))
arrange(top_unique_sorted, desc(unique))
top_unique_sorted <- arrange(top_unique, desc(unique))
View(top_unique_sorted)
submit()
submit()
submit()
View(result3)
cran %>%
select(ip_id, country, package, size) %>%
print
submit()
submit()
submit()
submit()
library(tidyr)
students
?gather
gather(students, sex, count, -grade)
students2
res <- gather(stundets2, sex_class, count)
res <- gather(students2, sex_class, count)
res <- gather(students2, sex_class, count, -grade)
res
?separate
separate(res, sex_class, c("sex", "class"))
submit()
students3
?gather
submit()
submit()
?spread
submit()
extract_numeric("class5")
?mutate
?mutate
?mutate
submit()
submit()
students4
submit()
submit()
submit()
passed
failed
passed <- mutate(passed, status = "passed")
failed <- mutate(failed, status = "failed")
bind_rows(passed, failed)
sat
?separate
submit()
submit()
?contains
?select
submit()
?group_by
submit()
submit()
swirl()
Sys.getlocale("LC_TIME")
library(lubridate)
help(package = lubridate)
this_day <- totay()
this_day <- today()
this_day
year(this_day)
wday(this_day)
wday(this_day, label = TRUE)
this_moment <- now()
this_moment
minute(this_moment)
ymd("1989-05-17")
my_date <- ymd("1989-05-17")
my_date
class(my_date)
ymd("1989 May 17")
mdy("March 12, 1975")
dmy(25081985)
ymd("192012")
ymd("1920-1-2")
dt1
ymd_hms(dt1)
hms("03:22:14")
dt2
ymd(dt2)
update(this_moment, hours = 8, minutes = 34, seconds = 55)
this_moment
update(this_moment, hm(now()))
this_moment <- update(this_moment, hours = 10, minutes = 16, seconds = 0)
this_moment
?now
nyc <- now(tzone = "America/New_York")
nyc
depart <- nyc + days(2)
depart
depart <- update(depart, hours = 17, minutes= 34)
depart
arrive <- depart + hours(15) + minutes(50)
?with_tz
arrive <- with_tz(arrive, tzone = "Asia/Hong_Kong")
arrive
last_time <- mdy("June 17, 2008", tz = "Singapore")
last_time
?new_interval
how_long <- new_interval(last_time, arrive)
as.period(how_long)
stopwatch()
library(swirl)
install.packages("lattice")
library(ggplot2)
install.packages("ggplot2")
library("ggplot2")
version
library(ggplot2)
data(mpg)
qplot((displ, hwy, data = mpg))
qplot(displ, hwy, data = mpg)
library(datasets)
?datasets
library(help = "datasets")
hist(airquality$Ozone)
hist(airquality$Ozone, breaks = 20)
with(airquality, plot(Wind, Ozone))
airquality <- transform(airquality, Month = factor(Month))
boxplot(Ozone ~ Month, airquality, xlab = "Month", ylab = "Ozone (ppb)")
colors()
with(airquality, plot(Wind, Ozone, main = "Ozone and Wind in NYC"))
with(subset(airquality, Month == 5), points(Wind, Ozone, col = "blue"))
with(airquality, plot(Wind, Ozone, main = "Ozone and Wind in NYC", type = "n"))
with(subset(airquality, Month == 5), points(Wind, Ozone, col = "blue"))
with(subset(airquality, Month != 5), points(Wind, Ozone, col = "red"))
legend("topright", pch=2, col= c("blue", "red"), legend = c("May", "Other Months"))
legend("topright", pch=1, col= c("blue", "red"), legend = c("May", "Other Months"))
with(airquality, plot(Wind, Ozone, main = "Ozone and Wind in NYC", pch = 20))
model <- lm(Ozone ~ Wind, airquality)
abline(model, lwd = 2)
par(mfrow = c(1,2))
with(airquality, { })
with(airquality, {
plot(Wind, Ozone, main = "Ozone and Wind")
plot(Solar.R, Ozone, main = "Ozone and Solar Radiation")
})
bitmap()
?bitmap
?quarts
?quartz
?bitmap
library(swirl)
swirl()
mydf <- read.csv(path2csv, stringsAsFactors = FALSE)
dim()
dim(mydf)
head(mydf)
library(dplyr)
packageVersion("dplyr")
cran <- tbl_df(mydf)
rm("mydf")
cran
?select
select(cran, ip_id, package, country)
5:20
select(cran, r_arch:country)
select(cran, country:r_arch)
cran
select(cran, -time)
-5:20
-(5:20)
select(cran, -(X:size))
filter(cran, package == "swirl")
filter(cran, r_version == "3.1.1", country == "US")
?Comparison
filter(cran, r_version <= "3.0.2", country == "IN")
filter(cran, r_version <= "3.0.2", country == "IN" | country == "US")
filter(cran, country == "IN" | country == "US")
filter(cran, size > 100500, r_os == "linux-gnu")
is.na(c(3,5,NA,10))
!is.na(c(3,5,NA,10))
filter(cran, !is.na(r_version))
cran2 <- select(cran, size:ip_id)
arrange(cran2, ip_id)
arrange(cran2, desc(ip_id))
arrange(cran2, package, ip_id)
arrange(cran2, country, desc(r_version), ip_id)
cran3 <- select(cran, ip_id, package, size)
cran3
mutate(cran3, size_mb = size/2^20)
mutate(cran3, size_mb = size/2^20, size_gb = size_mb/2^20)
mutate(cran3, size_mb = size/2^20, size_gb = size_mb/2^10)
mutate(cran3, correct_size = size + 1000)
summarize(cran, avg_bytes = mean(size))
library(dplyr)
cran <- tbl_df(mydf)
rm("mydf")
cran
?group_by()
?group_by
by_package <- group_by(cran, packages)
by_package <- group_by(cran, package)
by_package
summarize(by_package, mean(size))
submit()
pack_sum
quantile(pack_sum$count, probs = 0.99)
top_counts <- filter(pack_sum, count > 679)
top_counts
View()
View(top_count)
View(top_counts)
top_counts_sorted <- arrange(top_counts, desc(count))
View(top_counts_sorted)
quantile(pack_sum$unique, probs = 0.99)
top_unique <- filter(pack_sum, unique > 465)
View(top_unique)
top_unique_sorted <- arrange(top_unique, desc(unique))
View(top_unique_sorted)
submit()
submit()
?swirl
?play
submit()
View(result3)
submit()
submit()
submit()
submit()
play()
cran
by_country <- cran %>% select(country, ip_id, size, package)
by_country
by_country <-
cran %>%
select(country, ip_id, size, package) %>%
group_by(country)
by_country
by_country <-
cran %>%
select(country, ip_id, size, package) %>%
group_by(country) %>%
summarize(count = n(), unique = n_distinct(ip_id))
by_country
by_country <-
cran %>%
select(country, ip_id, size, package) %>%
group_by(country) %>%
summarize(count = n(), unique = n_distinct(ip_id)) %>%
arrange(desc(count))
by_country
by_country <-
cran %>%
select(country, ip_id, size, package) %>%
group_by(country) %>%
summarize(count = n(), unique = n_distinct(ip_id)) %>%
arrange(desc(unique))
by_country
nxt()
setwd("/Users/Tin/Desktop/rcoursera/ReproRes/RepData_PeerAssessment1")
list.files()
library(lubridate)
library(dplyr)
file <- "activity.csv"
data <- read.csv(file, header = TRUE, stringsAsFactor = FALSE)
data$date <- ymd(data$date)
summary(data)
by_date <-
data %>%
select(date, steps) %>%
group_by(date) %>%
summarize(stepsDay = sum(steps, na.rm = TRUE))
hist(by_date$stepsDay, main = "Steps Taken Per Day", col = "green", xlab = "steps/day")
Avg_steps <- mean(by_date$stepsDay)
Median_steps <- median(by_date$stepsDay)
Avg_steps
Median_steps
by_interval <-
data %>%
select(interval, steps) %>%
group_by(interval) %>%
summarize(avgStepsInt = mean(steps, na.rm = TRUE))
plot(by_interval$interval, by_interval$avgStepsInt, type = "l", xlab = "5-minute interval", ylab = "steps")
maxActiveInt <- by_interval[by_interval$avgStepsInt == max(by_interval$avgStepsInt),1]
maxActiveInt
data_ver <- data[which(is.na(data$steps)),]
verif <-
data_ver %>%
group_by(date) %>%
summarize(count = n(),
sum_int = sum(interval))
verif
countNA <- length(which(is.na(data$steps)))
countNA
datesNA <- levels(as.factor(data[which(is.na(data$steps)), 2]))
datesNA
data2 <- read.csv(file, header = TRUE, stringsAsFactor = FALSE)
summary(data2)
data2[which(data2$date == "2012-10-01"),1] <- by_interval$avgStepsInt
data2[which(data2$date == "2012-10-08"),1] <- by_interval$avgStepsInt
data2[which(data2$date == "2012-11-01"),1] <- by_interval$avgStepsInt
data2[which(data2$date == "2012-11-04"),1] <- by_interval$avgStepsInt
data2[which(data2$date == "2012-11-09"),1] <- by_interval$avgStepsInt
data2[which(data2$date == "2012-11-10"),1] <- by_interval$avgStepsInt
data2[which(data2$date == "2012-11-14"),1] <- by_interval$avgStepsInt
data2[which(data2$date == "2012-11-30"),1] <- by_interval$avgStepsInt
summary(data2)
data2$date <- ymd(data2$date)
summary(data2)
by_date2 <-
data2 %>%
select(date, steps) %>%
group_by(date) %>%
summarize(stepsDay2 = sum(steps, na.rm = TRUE))
hist(by_date2$stepsDay2, main = "Steps Taken Per Day", col = "red", xlab = "steps/day")
Avg_steps2 <- mean(by_date2$stepsDay2)
Median_steps2 <- median(by_date2$stepsDay2)
Avg_steps2
Median_steps2
data2$wk_wknd <- weekdays(data2$date)
summary(data2)
data2$wk_wknd <- gsub("Monday|Tuesday|Wednesday|Thursday|Friday", "weekday", data2$wk_wknd)
data2$wk_wknd <- gsub("Saturday|Sunday", "weekend", data2$wk_wknd)
data2$wk_wknd <- as.factor(data2$wk_wknd)
summary(data2)
weekdays <- data2[which(data2$wk_wknd == "weekday"),]
weekends <- data2[which(data2$wk_wknd == "weekend"),]
summary(weekdays)
summary(weekends)
by_int_weekday <-
weekdays %>%
select(interval, steps) %>%
group_by(interval) %>%
summarize(avgSteps = mean(steps))
View(by_int_weekday)
by_int_weekend <-
weeekends %>%
select(interval, steps) %>%
group_by(interval) %>%
summarize(AvgSteps = mean(steps))
by_int_weekend <-
weekends %>%
select(interval, steps) %>%
group_by(interval) %>%
summarize(AvgSteps = mean(steps))
View(by_int_weekend)
weekdaysV <- c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday")
data2 <- read.csv(file, header = TRUE, stringsAsFactor = FALSE)
data2[which(data2$date == "2012-10-01"),1] <- by_interval$avgStepsInt
data2[which(data2$date == "2012-10-08"),1] <- by_interval$avgStepsInt
data2[which(data2$date == "2012-11-01"),1] <- by_interval$avgStepsInt
data2[which(data2$date == "2012-11-04"),1] <- by_interval$avgStepsInt
data2[which(data2$date == "2012-11-09"),1] <- by_interval$avgStepsInt
data2[which(data2$date == "2012-11-10"),1] <- by_interval$avgStepsInt
data2[which(data2$date == "2012-11-14"),1] <- by_interval$avgStepsInt
data2[which(data2$date == "2012-11-30"),1] <- by_interval$avgStepsInt
data2$date <- ymd(data2$date)
by_date2 <-
data2 %>%
select(date, steps) %>%
group_by(date) %>%
summarize(stepsDay2 = sum(steps))
hist(by_date2$stepsDay2, main = "Steps Taken Per Day", col = "red", xlab = "steps/day")
Avg_steps2 <- mean(by_date2$stepsDay2)
Median_steps2 <- median(by_date2$stepsDay2)
Avg_steps2
Median_steps2
head(data2)
levels = c(FALSE, TRUE), labels = c("weekend", weekday))
levels = c(FALSE, TRUE), labels = c("weekend", "weekday"))
weekdaysV <- c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday")
data2$wkday <- factor((weekdays(data2$date) %in% weekdaysV), levels=c(FALSE, TRUE), labels=c('weekend', 'weekday'))
head(data2)
plot(data$interval, mean(data$steps))
maxActiveInt <- by_interval[by_interval$avgStepsInt == max(by_interval$avgStepsInt),1]
maxActiveInt
maxActiveInt <- by_interval[by_interval$avgStepsInt == max(by_interval$avgStepsInt),]
maxActiveInt
head(data2)
weekdays <- data2[which(data2$wkday == "weekday"),]
weekends <- data2[which(data2$wkday == "weekend"),]
head(weekdays)
by_int_weekday <-
weekdays %>%
select(interval, steps) %>%
group_by(interval) %>%
summarize(avgSteps = mean(steps))
View(by_int_weekday)
by_int_weekend <-
weekends %>%
select(interval, steps) %>%
group_by(interval) %>%
summarize(AvgSteps = mean(steps))
View(by_int_weekend)
by_weekday <-
weekdays %>%
select(interval, steps) %>%
group_by(interval) %>%
summarize(avgSteps = mean(steps))
by_wkday <-
weekdays %>%
select(interval, steps) %>%
group_by(interval) %>%
summarize(avgSteps = mean(steps))
by_wkend <-
weekends %>%
select(interval, steps) %>%
group_by(interval) %>%
summarize(AvgSteps = mean(steps))
by_wkend
plot(by_wkday[,1], by_wkday[,2], type = "l", xlab = "5 Minute Interval", ylab = "Steps/Day", main = "Weekdays")
plot(by_wkend[,1], by_wkend[,2], type = "l", xlab = "5 Minute Interval", ylab = "Steps/Day", main = "Weekends")
DF_wkend <- as.data.frame(by_wkend)
DF_wkday <- as.data.frame(by_wkday)
plot(DF_wkday[,1], DF_wkday[,2], type = "l", xlab = "5 Minute Interval", ylab = "Steps/Day", main = "Weekdays")
plot(DF_wkend[,1], DF_wkend[,2], type = "l", xlab = "5 Minute Interval", ylab = "Steps/Day", main = "Weekends")
par(mfrow = c(2,1))
plot(DF_wkday[,1], DF_wkday[,2], type = "l", xlab = "5 Minute Interval", ylab = "Steps/Day", main = "Weekdays")
plot(DF_wkend[,1], DF_wkend[,2], type = "l", xlab = "5 Minute Interval", ylab = "Steps/Day", main = "Weekends")
dev.off()
par(mfrow = c(2,1), mar = c(4,4,2,2))
plot(DF_wkday[,1], DF_wkday[,2], type = "l", xlab = "5 Minute Interval", ylab = "Steps/Day", main = "Weekdays")
plot(DF_wkend[,1], DF_wkend[,2], type = "l", xlab = "5 Minute Interval", ylab = "Steps/Day", main = "Weekends")
?round
View(by_date)
maxActiveInt
maxActiveInt <- by_interval[by_interval$avgStepsInt == max(by_interval$avgStepsInt),1]
maxActiveInt
as.numberic(maxActiveInt)
as.numeric(maxActiveInt)
maxActiveInt <- as.numeric(by_interval[by_interval$avgStepsInt == max(by_interval$avgStepsInt),1])
maxActiveInt
maxSteps <-  max(by_interval$avgStepsInt)
maxSteps
maxSteps <-  round(max(by_interval$avgStepsInt))
maxSteps
'r verif'
Avg_steps2
